        <script type="text/javascript" language="javascript" src="../resources/datatables/js/jquery.dataTables.js"></script>
        <script type="text/javascript" charset="utf-8">

function fnFormatDetails(table_id, html) {
    var sOut = '<table id="TestSuitTable2">';
    sOut += html;
    sOut += "</table>";


    return sOut;
}



var iTableCounter = 1;
    var oTable;
    var oInnerTable;
    var TableHtml;

    //Run On HTML Build
    $(document).ready(function () {

       $.ajax({
				  url: "../controller/product_home_onLoad_test.jag",
				  context: document.body,
				  //data: {"WSO2_QAP_PRODUCT_VERSION_ID": WSO2_QAP_PRODUCT_VERSION_ID}
				}).done(function(data) {
				    TableHtml = data;
				});


        //Insert a 'details' column to the table
        var nCloneTh = document.createElement('th');
        var nCloneTd = document.createElement('td');
        nCloneTd.innerHTML = '<img src="../resources/datatables/images/details_open.png">';
        nCloneTd.className = "center";

        $('#TestSuitTable thead tr').each(function () {
            this.insertBefore(nCloneTh, this.childNodes[0]);
        });

        $('#TestSuitTable tbody tr').each(function () {
            this.insertBefore(nCloneTd.cloneNode(true), this.childNodes[0]);
        });

        //Initialse DataTables, with no sorting on the 'details' column
        var oTable = $('#TestSuitTable').dataTable({
            "bJQueryUI": true,
            "sPaginationType": "full_numbers",
            "aoColumnDefs": [
            { "bSortable": false, "aTargets": [0] }
        ],
            "aaSorting": [[1, 'asc']]
        });


        /* Add event listener for opening and closing details
        * Note that the indicator for showing which row is open is not controlled by DataTables,
        * rather it is done here
        */
        $('#TestSuitTable tbody td img').live('click', function () {
            var nTr = $(this).parents('tr')[0];
            if (oTable.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                this.src = "../resources/datatables/images/details_open.png";
                oTable.fnClose(nTr);
            }
            else {
                /* Open this row */

                
                this.src = "../resources/datatables/images/details_close.png";
                oTable.fnOpen(nTr, fnFormatDetails(iTableCounter, TableHtml), 'details');
                oInnerTable = $("#TestSuitTable_" + iTableCounter).dataTable({
                    "bJQueryUI": true,
                    "sPaginationType": "full_numbers"
                });
                iTableCounter = iTableCounter + 1;
            }
        });


    });
        </script>

<%


include("base64_encode.jag");
var SERVICE_SECURE_ROOT = session.get("service_secure_root");

var url_toget_testsuit_id=SERVICE_SECURE_ROOT+"WSO2_QAP_TESTPLAN_MAPPING_TESTSUIT_DataService/get/testsuit_ids/"+TestPlanID;


var optionalHeaders = {
    "Accept": "application/json",
    "Authorization": "Basic "+base64_encode("admin:admin")
};

var data_testSuitID = get(url_toget_testsuit_id,"",optionalHeaders);

var objTestSuitID=parse(data_testSuitID.data);

var list_testSuitID=objTestSuitID.WSO2_QAP_TESTPLAN_MAPPING_TESTSUITCollection.WSO2_QAP_TESTPLAN_MAPPING_TESTSUIT;

if(list_testSuitID==null){
    print('<tr>');
    //print(' <td>');
    //print(' </td>');

    print(' <td>');
    print("No data available");
    print('</td>');
    print('</tr>');
}


if (!(list_testSuitID instanceof Array))
{
    var url_testSuits=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SUIT_DataService/view/testsuit_by_id/"+list_testSuitID.WSO2_QAP_TEST_SUIT_ID;

    var data_testSuits=get(url_testSuits,"",optionalHeaders);

    var objTestSuits=parse(data_testSuits.data);

    var list_testSuits=objTestSuits.WSO2_QAP_TEST_SUITCollection.WSO2_QAP_TEST_SUIT;
    //have to show the test suit details

    print(' <td>');
    print("&emsp;&emsp;&emsp;");
    print(list_testSuits.WSO2_QAP_TEST_SUIT_NAME );
    print('</td>');

}



else{

    for(var i=0;i<list_testSuitID.length;i++)
    {
        var url_testSuits=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SUIT_DataService/view/testsuit_by_id/"+list_testSuitID[i].WSO2_QAP_TEST_SUIT_ID;

        var data_testSuits=get(url_testSuits,"",optionalHeaders);

        var objTestSuits=parse(data_testSuits.data);

        var list_testSuits=objTestSuits.WSO2_QAP_TEST_SUITCollection.WSO2_QAP_TEST_SUIT;

        //have to show the test suit details

       print('<tr>');
       // print(' <td style="text-align:center; !important" width="10px">');
       // print('    <input name="featureID" value="'+list_testSuits.WSO2_QAP_TEST_SUIT_ID+'" onclick="resetVars()" class="chkBox" type="checkbox">');
       // print(' </td>');

        print(' <td>');
        var link = "test_suit_dashboard.jag?data="+encodeURIComponent(stringify(list_testSuits.WSO2_QAP_TEST_SUIT_ID));
        print('<a href="'+link+'">');
        print("&emsp;&emsp;&emsp;");
        print(list_testSuits.WSO2_QAP_TEST_SUIT_NAME );
        print('</a>');
        print('</td>');
        print('</tr>');


        print(' <td>');
        print("&emsp;&emsp;&emsp;");
        print(list_testSuits.WSO2_QAP_TEST_SUIT_NAME );
        print('</td>');



            include("show_Testscenario_details_for_expand.jag");
/*
        var url_testScenariosID=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SUIT_TEST_SCENARIO_MAPPING_DataService/get/testscenarios_by_testsuit_ids/"+list_testSuitID[i].WSO2_QAP_TEST_SUIT_ID;
        var data_testScenarioID=get(url_testScenariosID,"",optionalHeaders);
        var objTestScenarioID=parse(data_testScenarioID.data);
        var list_testscenarioID=objTestScenarioID.WSO2_QAP_TEST_SUIT_TEST_SCENARIO_MAPPINGCollection.WSO2_QAP_TEST_SUIT_TEST_SCENARIO_MAPPING;
        print(list_testscenarioID);

        if (!(list_testscenarioID instanceof Array))
        {
            var url_testScenarios=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SCENARIO_DataService/view/testscenario_with_id/"+list_testscenarioID.WSO2_QAP_TEST_SCENARIO_ID;
            var data_testscenarios=get(url_testScenarios,"",optionalHeaders);
            var objTestScenarios=parse(data_testscenarios.data);
            var list_Testscenarios=objTestScenarios.WSO2_QAP_TEST_SCENARIOCollection.WSO2_QAP_TEST_SCENARIO;

            //have to show the test scenario details


            //print(list_Testscenarios);
            var url_testcaseID=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SCENARIO_TEST_CASE_MAPPING_DataService/view/testcase_with_testscenarioid/"+list_testscenarioID.WSO2_QAP_TEST_SCENARIO_ID;
            var data_testcaseID=get(url_testcaseID,"",optionalHeaders);
            var objTestcaseID=parse(data_testcaseID.data);
            var list_testcaseID=objTestcaseID.WSO2_QAP_TEST_SCENARIO_TEST_CASE_MAPPINGCollection.WSO2_QAP_TEST_SCENARIO_TEST_CASE_MAPPING;




        }
        else{

            for(var j=0;j<list_testscenarioID.length;j++)
            {
                var url_testScenarios=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SCENARIO_DataService/view/testscenario_with_id/"+list_testscenarioID[j].WSO2_QAP_TEST_SCENARIO_ID;
                var data_testscenarios=get(url_testScenarios,"",optionalHeaders);
                var objTestScenarios=parse(data_testscenarios.data);
                var list_Testscenarios=objTestScenarios.WSO2_QAP_TEST_SCENARIOCollection.WSO2_QAP_TEST_SCENARIO;
                //print(list_Testscenarios);
                //have to show the test scenario details

                var url_testcaseID=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_SCENARIO_TEST_CASE_MAPPING_DataService/view/testcase_with_testscenarioid/"+list_testscenarioID[j].WSO2_QAP_TEST_SCENARIO_ID;
                var data_testcaseID=get(url_testcaseID,"",optionalHeaders);
                var objTestcaseID=parse(data_testcaseID.data);
                var list_testcaseID=objTestcaseID.WSO2_QAP_TEST_SCENARIO_TEST_CASE_MAPPINGCollection.WSO2_QAP_TEST_SCENARIO_TEST_CASE_MAPPING;


                if(!(list_testcaseID instanceof Array))
                {
                var url_testResultdetails=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_RESULT_DataService/view/testreults_for_build/"+WSO2_QAP_BUILD_ID+"/"+list_testcaseID.WSO2_QAP_TEST_CASE_ID;
                var data_testResultdetails=get(url_testResultdetails,"",optionalHeaders);
                var objTestResultdetails= parse(data_testResultdetails.data);
                var list_testResultdetails=objTestResultdetails.WSO2_QAP_TEST_RESULTFORBUILDCollection.WSO2_QAP_TEST_RESULTFORBUILD;


                    //Have to show the test result details for each test cases


                }
                else{

                    for(var k=0;k<list_testcaseID.length;k++)
                    {
                        var url_testResultdetails=SERVICE_SECURE_ROOT+"WSO2_QAP_TEST_RESULT_DataService/view/testreults_for_build/"+WSO2_QAP_BUILD_ID+"/"+list_testcaseID[k].WSO2_QAP_TEST_CASE_ID;
                        var data_testResultdetails=get(url_testResultdetails,"",optionalHeaders);
                        var objTestResultdetails= parse(data_testResultdetails.data);
                        var list_testResultdetails=objTestResultdetails.WSO2_QAP_TEST_RESULTFORBUILDCollection.WSO2_QAP_TEST_RESULTFORBUILD;

                        print(list_testResultdetails);

                        //Have to show the test result details for each test cases


                    }
                }
            }
        }
        */



    }
<<<<<<< HEAD:controller/show_testplan_instance.jag
=======

}
>>>>>>> d0a162c7e613ac469efec957cf475de1ba89b2f2:controller/show_testplan_instance_for_expand.jag


}

%>